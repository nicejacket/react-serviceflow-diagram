// Generated by dts-bundle v0.7.3
// Dependencies for this module:
//   ../react

import * as React from 'react';

export interface DiagramProps {
    diagram: DiagramModel;
    customerActivities?: (ele: DiagramElementModel) => any;
    onClick?: (e: any) => void;
}
export default class Diagram extends React.Component<DiagramProps, any> {
    static defaultProps: {
        onClick: () => void;
    };
    constructor(props: DiagramProps);
    componentWillReceiveProps({diagram}: DiagramProps): void;
    onMouseEnterHandler: (e: any) => void;
    renderElement: (ele: DiagramElementModel) => any;
    render(): JSX.Element;
}

export class DiagramModel {
    diagramBeginX: number;
    diagramBeginY: number;
    diagramHeight: number;
    diagramWidth: number;
    elements: DiagramElementModel[];
    flows: DiagramFlowElementModel[];
    pools: DiagramPoolElementModel[];
    constructor(obj?: any);
}
export class DiagramElementModel {
    completed: boolean;
    current: boolean;
    height: string;
    id: string;
    name: string;
    type: string;
    width: string;
    value: string;
    x: string;
    y: string;
    properties: DiagramElementPropertyModel[];
    dataType: string;
    eventDefinition: DiagramEventDefinitionModel;
    taskType: string;
    constructor(obj?: any);
}
export class DiagramElementPropertyModel {
    name: string;
    type: string;
    value: any;
    constructor(obj?: any);
}
export class DiagramFlowElementModel {
    completed: boolean;
    current: boolean;
    id: string;
    properties: any[];
    sourceRef: string;
    targetRef: string;
    type: string;
    waypoints: DiagramWayPointModel[];
    constructor(obj?: any);
}
export class DiagramWayPointModel {
    x: number;
    y: number;
    constructor(obj?: any);
}
export class DiagramEventDefinitionModel {
    timeCycle: string;
    type: string;
    constructor(obj?: any);
}
export class DiagramPoolElementModel {
    height: string;
    id: string;
    name: string;
    properties: any;
    lanes: DiagramLaneElementModel[];
    width: string;
    x: number;
    y: number;
    constructor(obj?: any);
}
export class DiagramLaneElementModel {
    height: number;
    id: string;
    name: string;
    width: number;
    x: number;
    y: number;
    constructor(obj?: any);
}

export { RaphaelCircle, RaphaelElement };

export interface CircleProps {
    id?: string;
    x?: number;
    y?: number;
    r?: number;
}
export default class Circle extends React.Component<CircleProps, any> {
    static defaultProps: {
        x: number;
        y: number;
        r: number;
    };
    element: Element;
    getElement(): RaphaelElement;
    render(): JSX.Element;
}

export default class Element extends React.Component<any, any> {
    constructor(props: any);
    element: RaphaelElement;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    getElement(): RaphaelElement;
    handleLoad(element: RaphaelElement): void;
    handleUpdate(element: Element): void;
    render(): JSX.Element;
}

